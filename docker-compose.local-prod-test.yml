# File Docker Compose per testare localmente una configurazione simile alla produzione
# Usa immagini buildate localmente e un file .env.localprod
services:
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data_local_prod:/var/lib/postgresql/data/
    env_file:
      - .env.localprod # Legge le variabili da .env.localprod
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    # Usa l'immagine buildata localmente
    image: edu-app-backend:local-test
    build:
      context: .
      dockerfile: Dockerfile # Assicurati che questo sia il Dockerfile corretto per il backend
    # ports: # Rimosso, accesso tramite nginx-proxy locale (Riga commentata)
    #  - "8000:8000"
    env_file:
      - .env.localprod # Legge le variabili da .env.localprod
    depends_on:
      db:
        condition: service_healthy
    volumes: # Mappatura volume media
      - media_data_local_prod:/app/mediafiles
    restart: unless-stopped

  frontend-student:
    # Usa l'immagine buildata localmente
    image: edu-app-frontend-student:local-test
    build:
      context: ./frontend-student
      dockerfile: Dockerfile # Assicurati che questo sia il Dockerfile corretto
    # ports: # Rimosso, accesso tramite nginx-proxy locale (Riga commentata)
      # Potresti voler cambiare porta se 5175 è già usata localmente (ora esposta da nginx-proxy)
      # - "5175:80" # Rimosso, accesso tramite nginx-proxy locale
    depends_on:
      - backend
    volumes: # Mappatura volume media per servire file
      - media_data_local_prod:/usr/share/nginx/media
    restart: unless-stopped

  frontend-teacher:
    # Usa l'immagine buildata localmente
    image: edu-app-frontend-teacher:local-test
    build:
      context: ./frontend-teacher
      dockerfile: Dockerfile # Assicurati che questo sia il Dockerfile corretto
    # ports: # Rimosso, accesso tramite nginx-proxy locale (Riga commentata)
      # Potresti voler cambiare porta se 5174 è già usata localmente (ora esposta da nginx-proxy)
      # - "5174:80" # Rimosso, accesso tramite nginx-proxy locale
    depends_on:
      - backend
    volumes: # Mappatura volume media per servire file
      - media_data_local_prod:/usr/share/nginx/media
    restart: unless-stopped
  nginx-proxy:
    image: nginx:alpine
    ports:
      - "80:80" # Espone la porta 80 dell'host per accedere a tutto
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro # Monta la configurazione Nginx locale
      - media_data_local_prod:/usr/share/nginx/media:ro # Monta i media per servirli direttamente
    depends_on:
      - backend
      - frontend-student
      - frontend-teacher
    restart: unless-stopped

volumes:
  postgres_data_local_prod:
  media_data_local_prod: {} # Volume per i media locali