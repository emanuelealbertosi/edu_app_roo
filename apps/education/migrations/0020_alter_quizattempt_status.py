# Generated by Django 5.1.7 on 2025-05-09 11:43

from django.db import migrations, models

# Funzione per la migrazione dei dati
def migrate_pending_to_pending_grading(apps, schema_editor):
    QuizAttempt = apps.get_model('education', 'QuizAttempt')
    db_alias = schema_editor.connection.alias
    # Aggiorna i record che hanno lo stato 'PENDING' (che prima significava PENDING_GRADING)
    # al nuovo valore corretto 'PENDING_GRADING'.
    # Questo presume che 'PENDING' fosse usato univocamente per PENDING_GRADING prima di questa modifica.
    QuizAttempt.objects.using(db_alias).filter(status='PENDING').update(status='PENDING_GRADING')

# Funzione opzionale per il revert (buona pratica)
def revert_pending_grading_to_pending(apps, schema_editor):
    QuizAttempt = apps.get_model('education', 'QuizAttempt')
    db_alias = schema_editor.connection.alias
    # Se si fa un revert, i record che sono 'PENDING_GRADING' dovrebbero tornare a 'PENDING'
    # per essere coerenti con la definizione precedente del modello.
    QuizAttempt.objects.using(db_alias).filter(status='PENDING_GRADING').update(status='PENDING')


class Migration(migrations.Migration):

    dependencies = [
        ('education', '0019_notification'),
    ]

    operations = [
        migrations.RunPython(migrate_pending_to_pending_grading, revert_pending_grading_to_pending),
        migrations.AlterField(
            model_name='quizattempt',
            name='status',
            field=models.CharField(choices=[('IN_PROGRESS', 'In Progress'), ('PENDING_GRADING', 'Pending Manual Grading'), ('COMPLETED', 'Completed (Passed)'), ('FAILED', 'Completed (Failed)')], default='IN_PROGRESS', max_length=20, verbose_name='Status'),
        ),
    ]
