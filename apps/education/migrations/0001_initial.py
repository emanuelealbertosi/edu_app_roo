# Generated by Django 5.1.7 on 2025-03-27 13:49

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Pathway',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='E.g., points_on_completion', verbose_name='Metadata')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('teacher', models.ForeignKey(limit_choices_to={'role': 'TEACHER'}, on_delete=django.db.models.deletion.CASCADE, related_name='created_pathways', to=settings.AUTH_USER_MODEL, verbose_name='Teacher')),
            ],
            options={
                'verbose_name': 'Pathway',
                'verbose_name_plural': 'Pathways',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='E.g., difficulty, subject, completion_threshold (0-1), points_on_completion', verbose_name='Metadata')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('available_from', models.DateTimeField(blank=True, null=True, verbose_name='Available From')),
                ('available_until', models.DateTimeField(blank=True, null=True, verbose_name='Available Until')),
                ('teacher', models.ForeignKey(limit_choices_to={'role': 'TEACHER'}, on_delete=django.db.models.deletion.CASCADE, related_name='created_quizzes', to=settings.AUTH_USER_MODEL, verbose_name='Teacher')),
            ],
            options={
                'verbose_name': 'Quiz',
                'verbose_name_plural': 'Quizzes',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Question Text')),
                ('question_type', models.CharField(choices=[('MC_SINGLE', 'Multiple Choice (Single Answer)'), ('MC_MULTI', 'Multiple Choice (Multiple Answers)'), ('TF', 'True/False'), ('FILL_BLANK', 'Fill in the Blank'), ('OPEN_MANUAL', 'Open Answer (Manual Grading)')], max_length=20, verbose_name='Question Type')),
                ('order', models.PositiveIntegerField(default=0, help_text='Order of the question within the quiz.', verbose_name='Order')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Specific config based on type, e.g., correct answers for fill_blank, points.', verbose_name='Metadata')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='education.quiz', verbose_name='Quiz')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
                'ordering': ['quiz', 'order'],
                'unique_together': {('quiz', 'order')},
            },
        ),
        migrations.CreateModel(
            name='PathwayQuiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(help_text='Order of the quiz within the pathway.', verbose_name='Order')),
                ('pathway', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='education.pathway')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='education.quiz')),
            ],
            options={
                'verbose_name': 'Pathway Quiz',
                'verbose_name_plural': 'Pathway Quizzes',
                'ordering': ['pathway', 'order'],
                'unique_together': {('pathway', 'order')},
            },
        ),
        migrations.AddField(
            model_name='pathway',
            name='quizzes',
            field=models.ManyToManyField(related_name='pathways', through='education.PathwayQuiz', to='education.quiz', verbose_name='Quizzes'),
        ),
        migrations.CreateModel(
            name='QuizAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(auto_now_add=True, verbose_name='Started At')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
                ('score', models.FloatField(blank=True, help_text='Final score achieved (e.g., percentage or total points).', null=True, verbose_name='Score')),
                ('status', models.CharField(choices=[('IN_PROGRESS', 'In Progress'), ('PENDING', 'Pending Manual Grading'), ('COMPLETED', 'Completed')], default='IN_PROGRESS', max_length=20, verbose_name='Status')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='education.quiz', verbose_name='Quiz')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_attempts', to='users.student', verbose_name='Student')),
            ],
            options={
                'verbose_name': 'Quiz Attempt',
                'verbose_name_plural': 'Quiz Attempts',
                'ordering': ['student', '-started_at'],
            },
        ),
        migrations.CreateModel(
            name='QuizTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Extra data like difficulty, subject, etc.', verbose_name='Metadata')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('admin', models.ForeignKey(limit_choices_to={'role': 'ADMIN'}, on_delete=django.db.models.deletion.CASCADE, related_name='created_quiz_templates', to=settings.AUTH_USER_MODEL, verbose_name='Admin Creator')),
            ],
            options={
                'verbose_name': 'Quiz Template',
                'verbose_name_plural': 'Quiz Templates',
                'ordering': ['title'],
            },
        ),
        migrations.AddField(
            model_name='quiz',
            name='source_template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quizzes_from_template', to='education.quiztemplate', verbose_name='Source Template'),
        ),
        migrations.CreateModel(
            name='QuestionTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Question Text')),
                ('question_type', models.CharField(choices=[('MC_SINGLE', 'Multiple Choice (Single Answer)'), ('MC_MULTI', 'Multiple Choice (Multiple Answers)'), ('TF', 'True/False'), ('FILL_BLANK', 'Fill in the Blank'), ('OPEN_MANUAL', 'Open Answer (Manual Grading)')], max_length=20, verbose_name='Question Type')),
                ('order', models.PositiveIntegerField(default=0, help_text='Order of the question within the template.', verbose_name='Order')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Specific config based on type, e.g., correct answers for fill_blank, points.', verbose_name='Metadata')),
                ('quiz_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_templates', to='education.quiztemplate', verbose_name='Quiz Template')),
            ],
            options={
                'verbose_name': 'Question Template',
                'verbose_name_plural': 'Question Templates',
                'ordering': ['quiz_template', 'order'],
                'unique_together': {('quiz_template', 'order')},
            },
        ),
        migrations.CreateModel(
            name='PathwayProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_completed_quiz_order', models.PositiveIntegerField(blank=True, null=True, verbose_name='Last Completed Quiz Order')),
                ('started_at', models.DateTimeField(auto_now_add=True, verbose_name='Started At')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
                ('status', models.CharField(choices=[('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed')], default='IN_PROGRESS', max_length=20, verbose_name='Status')),
                ('pathway', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progresses', to='education.pathway', verbose_name='Pathway')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pathway_progresses', to='users.student', verbose_name='Student')),
            ],
            options={
                'verbose_name': 'Pathway Progress',
                'verbose_name_plural': 'Pathway Progresses',
                'ordering': ['student', '-started_at'],
                'unique_together': {('student', 'pathway')},
            },
        ),
        migrations.CreateModel(
            name='AnswerOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=500, verbose_name='Option Text')),
                ('is_correct', models.BooleanField(default=False, verbose_name='Is Correct?')),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order of the option.', verbose_name='Order')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answer_options', to='education.question', verbose_name='Question')),
            ],
            options={
                'verbose_name': 'Answer Option',
                'verbose_name_plural': 'Answer Options',
                'ordering': ['question', 'order'],
                'unique_together': {('question', 'order')},
            },
        ),
        migrations.CreateModel(
            name='AnswerOptionTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=500, verbose_name='Option Text')),
                ('is_correct', models.BooleanField(default=False, help_text='Is this the/a correct answer for the question?', verbose_name='Is Correct?')),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order of the option.', verbose_name='Order')),
                ('question_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answer_option_templates', to='education.questiontemplate', verbose_name='Question Template')),
            ],
            options={
                'verbose_name': 'Answer Option Template',
                'verbose_name_plural': 'Answer Option Templates',
                'ordering': ['question_template', 'order'],
                'unique_together': {('question_template', 'order')},
            },
        ),
        migrations.CreateModel(
            name='StudentAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected_answers', models.JSONField(blank=True, default=dict, verbose_name='Selected Answers')),
                ('is_correct', models.BooleanField(blank=True, null=True, verbose_name='Is Correct?')),
                ('score', models.FloatField(blank=True, null=True, verbose_name='Score')),
                ('answered_at', models.DateTimeField(auto_now_add=True, verbose_name='Answered At')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_answers', to='education.question', verbose_name='Question')),
                ('quiz_attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_answers', to='education.quizattempt', verbose_name='Quiz Attempt')),
            ],
            options={
                'verbose_name': 'Student Answer',
                'verbose_name_plural': 'Student Answers',
                'ordering': ['quiz_attempt', 'question__order'],
                'unique_together': {('quiz_attempt', 'question')},
            },
        ),
    ]
