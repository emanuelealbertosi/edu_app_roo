# Generated by Django 5.1.7 on 2025-03-27 13:49

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='wallet', serialize=False, to='users.student', verbose_name='Student')),
                ('current_points', models.PositiveIntegerField(default=0, help_text='Punti attualmente disponibili per lo studente.', verbose_name='Current Points')),
            ],
            options={
                'verbose_name': 'Wallet',
                'verbose_name_plural': 'Wallets',
            },
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('type', models.CharField(choices=[('DIGITAL', 'Digital'), ('REAL_WORLD', 'Real World Tracked')], default='DIGITAL', max_length=20, verbose_name='Type')),
                ('cost_points', models.PositiveIntegerField(verbose_name='Cost (Points)')),
                ('availability_type', models.CharField(choices=[('ALL', 'All Students of Teacher'), ('SPECIFIC', 'Specific Students')], default='ALL', max_length=10, verbose_name='Availability')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Extra data like image URL, link, etc. Inherited/overridden from template.', verbose_name='Metadata')),
                ('is_active', models.BooleanField(default=True, help_text='Is this reward currently available for purchase?', verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('teacher', models.ForeignKey(limit_choices_to={'role': 'TEACHER'}, on_delete=django.db.models.deletion.CASCADE, related_name='created_rewards', to=settings.AUTH_USER_MODEL, verbose_name='Teacher')),
            ],
            options={
                'verbose_name': 'Reward',
                'verbose_name_plural': 'Rewards',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RewardPurchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_spent', models.PositiveIntegerField(verbose_name='Points Spent')),
                ('purchased_at', models.DateTimeField(auto_now_add=True, verbose_name='Purchased At')),
                ('status', models.CharField(choices=[('PURCHASED', 'Purchased'), ('DELIVERED', 'Delivered'), ('CANCELLED', 'Cancelled')], default='PURCHASED', max_length=10, verbose_name='Status')),
                ('delivered_at', models.DateTimeField(blank=True, null=True, verbose_name='Delivered At')),
                ('delivery_notes', models.TextField(blank=True, verbose_name='Delivery Notes')),
                ('delivered_by', models.ForeignKey(blank=True, limit_choices_to={'role': 'TEACHER'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='delivered_rewards', to=settings.AUTH_USER_MODEL, verbose_name='Delivered By')),
                ('reward', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchases', to='rewards.reward', verbose_name='Reward')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='users.student', verbose_name='Student')),
            ],
            options={
                'verbose_name': 'Reward Purchase',
                'verbose_name_plural': 'Reward Purchases',
                'ordering': ['-purchased_at'],
            },
        ),
        migrations.CreateModel(
            name='RewardStudentSpecificAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('reward', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rewards.reward')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.student')),
            ],
            options={
                'verbose_name': 'Reward Specific Availability',
                'verbose_name_plural': 'Reward Specific Availabilities',
                'ordering': ['assigned_at'],
                'unique_together': {('reward', 'student')},
            },
        ),
        migrations.AddField(
            model_name='reward',
            name='available_to_specific_students',
            field=models.ManyToManyField(blank=True, through='rewards.RewardStudentSpecificAvailability', to='users.student', verbose_name='Specifically Available To'),
        ),
        migrations.CreateModel(
            name='RewardTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scope', models.CharField(choices=[('GLOBAL', 'Global'), ('LOCAL', 'Local')], help_text='Global (Admin) or Local (Teacher)', max_length=10, verbose_name='Scope')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('type', models.CharField(choices=[('DIGITAL', 'Digital'), ('REAL_WORLD', 'Real World Tracked')], default='DIGITAL', max_length=20, verbose_name='Type')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Extra data like image URL, link, etc.', verbose_name='Metadata')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_reward_templates', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
            ],
            options={
                'verbose_name': 'Reward Template',
                'verbose_name_plural': 'Reward Templates',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='reward',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rewards_from_template', to='rewards.rewardtemplate', verbose_name='Source Template'),
        ),
        migrations.CreateModel(
            name='PointTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_change', models.IntegerField(help_text='Numero di punti aggiunti (positivo) o rimossi (negativo).', verbose_name='Points Change')),
                ('reason', models.CharField(help_text='Motivo della transazione (es. Completamento Quiz X, Acquisto Ricompensa Y).', max_length=255, verbose_name='Reason')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='rewards.wallet', verbose_name='Wallet')),
            ],
            options={
                'verbose_name': 'Point Transaction',
                'verbose_name_plural': 'Point Transactions',
                'ordering': ['-timestamp'],
            },
        ),
    ]
