# Generated by Django 5.1.7 on 2025-04-29 05:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('student_groups', '0002_alter_studentgroup_registration_token'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        # 1. Rinomina teacher in owner (preserva i dati)
        migrations.RenameField(
            model_name='studentgroup',
            old_name='teacher',
            new_name='owner',
        ),
        # 2. Aggiungi is_public
        migrations.AddField(
            model_name='studentgroup',
            name='is_public',
            field=models.BooleanField(default=False, help_text='Indica se il gruppo Ã¨ visibile ad altri docenti per richieste di accesso.', verbose_name='Gruppo Pubblico'),
        ),
        # 3. Aggiorna le opzioni del modello (usa 'owner')
        migrations.AlterModelOptions(
            name='studentgroup',
            options={'ordering': ['owner', 'name'], 'verbose_name': 'Gruppo di Studenti', 'verbose_name_plural': 'Gruppi di Studenti'},
        ),
        # 4. AlterUniqueTogether (commentato, da fare in migrazione separata)
        # migrations.AlterUniqueTogether(
        #     name='studentgroup',
        #     unique_together={('owner', 'name')},
        # ),
        # 5. Crea il nuovo modello GroupAccessRequest
        migrations.CreateModel(
            name='GroupAccessRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PENDING', 'In Attesa'), ('APPROVED', 'Approvato'), ('REJECTED', 'Rifiutato')], default='PENDING', max_length=10, verbose_name='Stato Richiesta')),
                ('requested_at', models.DateTimeField(auto_now_add=True, verbose_name='Data Richiesta')),
                ('responded_at', models.DateTimeField(blank=True, null=True, verbose_name='Data Risposta')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_requests', to='student_groups.studentgroup', verbose_name='Gruppo Richiesto')),
                ('requesting_teacher', models.ForeignKey(limit_choices_to={'role': 'TEACHER'}, on_delete=django.db.models.deletion.CASCADE, related_name='group_access_requests', to=settings.AUTH_USER_MODEL, verbose_name='Docente Richiedente')),
                ('responder', models.ForeignKey(blank=True, limit_choices_to={'role': 'TEACHER'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responded_group_requests', to=settings.AUTH_USER_MODEL, verbose_name='Docente che ha Risposto')),
            ],
            options={
                'verbose_name': 'Richiesta Accesso Gruppo',
                'verbose_name_plural': 'Richieste Accesso Gruppi',
                'ordering': ['group', '-requested_at'],
                'unique_together': {('group', 'requesting_teacher')},
            },
        ),
    ]
